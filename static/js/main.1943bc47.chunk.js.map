{"version":3,"sources":["data/nodes.csv","components/WorldMap.js","components/TXNodes.js","helpers/txNodes.js","helpers/processData.js","components/TXViz.js","hooks/useWindowDimensions.js","components/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["WorldMap","props","worldMap","useRef","centerStyle","projection","path","geoPath","pointRadius","mapData","topojson","countriesData","objects","countries","features","useEffect","d3","remove","current","selectAll","data","enter","append","attr","style","className","ref","TXNodes","vizContainer","width","height","nodes","translateX","translateY","node","map","radius","initialAngle","Math","PI","sqrt","i","n","length","index","angle","x","cos","y","sin","id","sx","sy","center","initializeNodes","links","dataset","txTestData","tx","rng","seedrandom","prevNode","timestamp","floor","pow","push","startPoint","endPoint","generateLinks","nodeData","time","filterNodeData","linkData","slice","filterLinkData","call","svg","d","drawInitNodes","nodesData","linksData","console","log","p","exit","l","drawLinkedNodes","ReactTooltip","rebuild","TXViz","txVizHash","txVizHashChanger","startTime","endTime","useState","rangeval","setRangeval","play","setPlay","btnSvg","setBtnSvg","inputRef","setRangeColor","value","progress","background","timer","setInterval","clearInterval","cornerDecorations","Array","e","src","alt","fill","opacity","type","min","max","onChange","event","Number","target","onClick","getWindowDimensions","window","innerWidth","innerHeight","SearchBox","isOpen","setIsOpen","searchTX","setSearchTX","toggleClass","onKeyPress","key","App","setTxVizHash","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","geoMiller","scale","rotate","translate","position","left","top","transform","x1","y1","x2","y2","stroke","strokeWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1943bc47.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/nodes.16a1ae4c.csv\";","import React, { useRef, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport * as topojson from \"topojson\";\r\nimport { geoPath } from \"d3-geo\";\r\nimport countriesData from \"../data/countries.topo.json\";\r\n\r\nconst WorldMap = (props) => {\r\n  const worldMap = useRef();\r\n\r\n  const centerStyle = props.centerStyle;\r\n  const projection = props.projection;\r\n\r\n  const path = geoPath().projection(projection).pointRadius(1);\r\n  const mapData = topojson.feature(\r\n    countriesData,\r\n    countriesData.objects.countries\r\n  ).features;\r\n\r\n  useEffect(() => {\r\n    d3.selectAll(\"path\").remove();\r\n\r\n    d3.select(worldMap.current)\r\n      .selectAll(\"path\")\r\n      .data(mapData)\r\n      .enter()\r\n      .append(\"path\")\r\n      .attr(\"d\", path)\r\n      .style(\"fill\", \"#1F1F1F\")\r\n      .style(\"stroke\", \"#090909\")\r\n      .style(\"stroke-width\", 0.7);\r\n  }, [props]);\r\n\r\n  return (\r\n    <svg\r\n      style={centerStyle}\r\n    >\r\n      <g className=\"world-map\" ref={worldMap} />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default WorldMap;\r\n","import React, { useRef, useEffect, Fragment } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport {\r\n  initializeNodes,\r\n  drawInitNodes,\r\n  drawLinkedNodes,\r\n} from \"../helpers/txNodes\";\r\nimport {\r\n  generateLinks,\r\n  filterNodeData,\r\n  filterLinkData,\r\n} from \"../helpers/processData\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst TXNodes = (props) => {\r\n  const vizContainer = useRef();\r\n  const width = props.width;\r\n  const height = props.height - 40;\r\n\r\n  const nodes = initializeNodes(width / 2, height / 2);\r\n  const links = generateLinks();\r\n  let nodeData = filterNodeData(props.time);\r\n  let linkData = filterLinkData(props.time, links);\r\n\r\n  useEffect(() => {\r\n    d3.select(vizContainer.current)\r\n      .call((svg) => drawInitNodes(svg, nodes))\r\n      .call((svg) => drawLinkedNodes(svg, nodes, nodeData, linkData));\r\n    ReactTooltip.rebuild();\r\n  }, [nodes, nodeData, linkData]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <svg ref={vizContainer} style={{ height: height, width: width }} />\r\n      <ReactTooltip />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TXNodes;\r\n","import * as d3 from \"d3\";\r\n\r\nconst R = 2.5;\r\nconst SPACING = 15;\r\nconst NODES_NUM = 100;\r\n\r\nexport const initializeNodes = (translateX, translateY) => {\r\n  const numNodes = NODES_NUM;\r\n  let nodes = d3.range(numNodes).map(function () {\r\n    return { radius: R };\r\n  });\r\n\r\n  const initialRadius = SPACING,\r\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\r\n\r\n  for (let i = 0, n = nodes.length, node; i < n; ++i) {\r\n    node = nodes[i];\r\n    node.index = i;\r\n    // if (isNaN(node.x) || isNaN(node.y)) {\r\n    const radius = initialRadius * Math.sqrt(0.5 + i),\r\n      angle = i * initialAngle;\r\n    node.x = radius * Math.cos(angle);\r\n    node.y = radius * Math.sin(angle);\r\n    // }\r\n    node.id = \"node\" + i;\r\n  }\r\n\r\n  function center(x, y) {\r\n    let i,\r\n      sx = 0,\r\n      sy = 0;\r\n    const n = nodes.length;\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      let node = nodes[i];\r\n      sx += node.x;\r\n      sy += node.y;\r\n    }\r\n\r\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\r\n      let node = nodes[i];\r\n      node.x -= sx;\r\n      node.y -= sy;\r\n    }\r\n  }\r\n\r\n  center(translateX, translateY);\r\n\r\n  return nodes;\r\n};\r\n\r\nexport const drawInitNodes = (svg, nodes) => {\r\n\r\n  svg\r\n    .selectAll(\"circle\")\r\n    .data(nodes)\r\n    .enter()\r\n    .append(\"circle\")\r\n    .attr(\"r\", function (d) {\r\n      return d.radius;\r\n    })\r\n    .attr(\"cx\", function (d) {\r\n      return d.x;\r\n    })\r\n    .attr(\"cy\", function (d) {\r\n      return d.y;\r\n    })\r\n    .attr(\"id\", function (d) {\r\n      return d.id;\r\n    })\r\n    .attr(\"data-tip\", function(d) {\r\n      return d.id;\r\n    })\r\n    // .append(\"svg:title\")\r\n    // .text(function(d) {\r\n    //   return d.id;\r\n    // })\r\n    .style(\"fill\", \"#E6E6E6\");\r\n\r\n  return svg.node();\r\n};\r\n\r\nexport const drawLinkedNodes = (svg, nodes, nodesData, linksData) => {\r\n  console.log(nodesData);\r\n  const p = svg.selectAll(\".recieved\").data(nodesData);\r\n  p.enter().append(\"circle\").attr(\"class\", \"recieved\");\r\n  p.attr(\"r\", R)\r\n    .attr(\"cx\", function (d) {\r\n      return nodes[d].x;\r\n    })\r\n    .attr(\"cy\", function (d) {\r\n      return nodes[d].y;\r\n    })\r\n    .attr(\"data-tip\", function(d) {\r\n      return nodes[d].id;\r\n    })\r\n    .style(\"fill\", \"#18EFB1\");\r\n  p.exit().remove();\r\n\r\n  const l = svg.selectAll(\".connect\").data(linksData);\r\n  l.enter().append(\"line\").attr(\"class\", \"connect\");\r\n  l.style(\"stroke\", \"#18EFB1\")\r\n    .attr(\"x1\", function (d) {\r\n      return nodes[d.startPoint].x;\r\n    })\r\n    .attr(\"y1\", function (d) {\r\n      return nodes[d.startPoint].y;\r\n    })\r\n    .attr(\"x2\", function (d) {\r\n      return nodes[d.endPoint].x;\r\n    })\r\n    .attr(\"y2\", function (d) {\r\n      return nodes[d.endPoint].y;\r\n    });\r\n  l.exit().remove();\r\n\r\n  return svg.node();\r\n};\r\n","import txTestData from \"../data/txTestData.json\";\r\nimport seedrandom from \"seedrandom\";\r\n\r\nexport const generateLinks = () => {\r\n  const dataset = txTestData.tx;\r\n  const rng = seedrandom('TXTXTXTXTXTXTXT0'); // using tx's hash as seed\r\n  let links = [];\r\n  for (let i = 1; i < dataset.length; i++) {\r\n    let prevNode = i;\r\n    while (dataset[prevNode].timestamp == dataset[i].timestamp) {\r\n      prevNode = Math.floor(Math.pow(rng(), 0.5) * i);\r\n    }\r\n    links.push({startPoint: prevNode, endPoint: i, timestamp: dataset[i].timestamp});\r\n  }\r\n  return links;\r\n}\r\n\r\nexport const filterNodeData = (time) => {\r\n  const dataset = txTestData.tx;\r\n  let i = 0;\r\n  let nodeData = [];\r\n  while (i < dataset.length && dataset[i].timestamp <= time) {\r\n    nodeData.push(i);\r\n    i += 1;\r\n  }\r\n  return nodeData;\r\n}\r\n\r\nexport const filterLinkData = (time, links) => {\r\n  let i = 0;\r\n  let linkData = [];\r\n  while (i < links.length && links[i].timestamp <= time) {\r\n    linkData.push(links[i]);\r\n    i += 1;\r\n  }\r\n  if (linkData.length > 40) {\r\n    linkData = linkData.slice(-40);\r\n  }\r\n  return linkData;\r\n}\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport TXNodes from \"./TXNodes\";\r\nimport \"../css/TXViz.scss\";\r\n\r\nconst TXViz = (props) => {\r\n  const txVizHash = props.txVizHash;\r\n  const txVizHashChanger = props.txVizHashChanger;\r\n\r\n  const width = 670;\r\n  const height = 380;\r\n\r\n  const startTime = 1622463474248;\r\n  const endTime = 1622463476577;\r\n  const [rangeval, setRangeval] = useState(startTime);\r\n  const [play, setPlay] = useState(false);\r\n  const [btnSvg, setBtnSvg] = useState(\"./play.svg\");\r\n\r\n  const inputRef = useRef();\r\n  const activeRangeColor = \"#18EFB1\";\r\n  const rangeBackgroundColor = \"#E6E6E6\";\r\n  const setRangeColor = (value) => {\r\n    const progress = ((value - startTime) / (endTime - startTime)) * 100 + \"%\";\r\n    inputRef.current.style.background = `linear-gradient(90deg, ${activeRangeColor} 0% ${progress}, ${rangeBackgroundColor} ${progress} 100%)`;\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const value = Number(event.target.value);\r\n    setRangeval(value);\r\n    setRangeColor(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (rangeval == endTime) {\r\n      setBtnSvg(\"./play.svg\");\r\n      setPlay(false);\r\n    }\r\n    if (play) {\r\n      const timer = setInterval(() => {\r\n        setRangeval(rangeval + 1);\r\n        setRangeColor(rangeval);\r\n      }, 1);\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [rangeval, play]);\r\n\r\n  const cornerDecorations = [...Array(4)].map((e, i) => (\r\n    <img id={\"corner\" + i} src={\"./corner.svg\"} alt=\"\" key={i} />\r\n  ));\r\n\r\n  return (\r\n    <div style={{ width: width, height: height }}>\r\n      <svg id=\"bg\" style={{ width: width, height: height }}>\r\n        <rect\r\n          x={0}\r\n          y={0}\r\n          width={width}\r\n          height={height}\r\n          style={{ fill: \"#1F1F1F\", opacity: 0.8 }}\r\n        />\r\n      </svg>\r\n\r\n      {cornerDecorations}\r\n\r\n      <div id=\"tx-nodes\">\r\n        <TXNodes time={rangeval} width={width} height={height} />\r\n      </div>\r\n\r\n      <p id=\"tx-hash\">{txVizHash}</p>\r\n\r\n      <div id=\"timeline\">\r\n        <p className=\"timeline-time\">{rangeval}</p>\r\n        <input\r\n          ref={inputRef}\r\n          type=\"range\"\r\n          className=\"timeline-slider\"\r\n          min={startTime}\r\n          max={endTime}\r\n          value={rangeval}\r\n          onChange={handleChange}\r\n        />\r\n        <img\r\n          id=\"play-button\"\r\n          onClick={() => {\r\n            if (rangeval == endTime) {\r\n              setRangeval(startTime);\r\n            }\r\n            if (play) {\r\n              setBtnSvg(\"./play.svg\");\r\n            } else {\r\n              setBtnSvg(\"./pause.svg\");\r\n            }\r\n            setPlay(!play);\r\n          }}\r\n          src={btnSvg}\r\n          alt=\"play button\"\r\n        />\r\n      </div>\r\n\r\n      <img\r\n        id=\"cancel-button\"\r\n        onClick={() => {\r\n          txVizHashChanger(null);\r\n        }}\r\n        src={\"./cancel.svg\"}\r\n        alt=\"cancel button\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TXViz;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth, innerHeight } = window;\r\n  return {\r\n    innerWidth,\r\n    innerHeight\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import React, { useState } from \"react\";\r\nimport \"../css/SearchBox.scss\";\r\n\r\nconst SearchBox = (props) => {\r\n  // TODO: handle error, maxlength, etc.\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [searchTX, setSearchTX] = useState();\r\n  const txVizHashChanger = props.txVizHashChanger;\r\n\r\n  const toggleClass = () => {\r\n    if (isOpen) {\r\n      txVizHashChanger(searchTX);\r\n    }\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div className={isOpen ? \"search open\" : \"search\"}>\r\n      <input\r\n        type=\"search\"\r\n        className=\"search-input\"\r\n        value={searchTX}\r\n        onChange={(e) => setSearchTX(e.target.value)}\r\n        onKeyPress={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            toggleClass();\r\n          }\r\n        }}\r\n      />\r\n      <span className=\"search-button\" onClick={toggleClass}>\r\n        <span className=\"search-icon\"></span>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\nimport \"./css/App.css\";\r\nimport TXs from \"./components/TXs\";\r\nimport WorldMap from \"./components/WorldMap\";\r\nimport TXViz from \"./components/TXViz\";\r\nimport useWindowDimensions from \"./hooks/useWindowDimensions\";\r\nimport { geoMiller } from \"d3-geo-projection\";\r\nimport SearchBox from \"./components/SearchBox\";\r\n\r\nfunction App() {\r\n  const [txVizHash, setTxVizHash] = useState(null);\r\n\r\n  const { innerWidth, innerHeight } = useWindowDimensions();\r\n  let width, height;\r\n  if (innerHeight > (innerWidth - 20) / 2.03) {\r\n    width = innerWidth - 20;\r\n    height = width / 2.03;\r\n  } else {\r\n    height = innerHeight;\r\n    width = height * 2.03;\r\n  }\r\n  const projection = geoMiller()\r\n    .scale((width / 630) * 100)\r\n    .rotate([-11, 0])\r\n    .translate([width / 2, height * 0.645]);\r\n\r\n  const centerStyle = {\r\n    height: height,\r\n    width: width,\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    top: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  };\r\n\r\n  return (\r\n    <div style={centerStyle}>\r\n      <div id=\"world-map\">\r\n        <WorldMap projection={projection} centerStyle={centerStyle} />\r\n      </div>\r\n\r\n      <div id=\"cryptape\">\r\n        <h1>CRYPTAPE</h1>\r\n      </div>\r\n      <div id=\"decoration-top\">\r\n        <img src={\"./decoration-top.svg\"} width={width * 0.1} />\r\n      </div>\r\n      <div id=\"decoration-bottom\">\r\n        <img src={\"./decoration-bottom.svg\"} width={width * 0.1} />\r\n      </div>\r\n      <div id=\"legend\">\r\n        <img src={\"./legend.svg\"} width={width * 0.04} />\r\n      </div>\r\n\r\n      {/* <div id=\"txs\">\r\n        <TXs\r\n          projection={projection}\r\n          centerStyle={centerStyle}\r\n          txVizHashChanger={setTxVizHash}\r\n        />\r\n      </div> */}\r\n\r\n      <div id=\"tx-viz\">\r\n        {txVizHash == null ? null : (\r\n          <TXViz txVizHash={txVizHash} txVizHashChanger={setTxVizHash} />\r\n        )}\r\n      </div>\r\n\r\n      <div id=\"bottom-line\">\r\n        <svg style={{ width: width * 0.6, height: \"2px\" }}>\r\n          <line\r\n            x1={0}\r\n            y1={2}\r\n            x2={width * 0.6}\r\n            y2={2}\r\n            style={{ stroke: \"#B8B8B8\", strokeWidth: \"0.5px\" }}\r\n          />\r\n          <rect\r\n            x={width * 0.6 - 670}\r\n            y={0}\r\n            width={2}\r\n            height={2}\r\n            style={{ fill: \"#E6E6E6\" }}\r\n          />\r\n          <rect\r\n            x={width * 0.6 - 2}\r\n            y={0}\r\n            width={2}\r\n            height={2}\r\n            style={{ fill: \"#E6E6E6\" }}\r\n          />\r\n        </svg>\r\n      </div>\r\n\r\n      <div id=\"search-box\">\r\n        <SearchBox txVizHashChanger={setTxVizHash} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}